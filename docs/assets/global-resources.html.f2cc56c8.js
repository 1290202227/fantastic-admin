import{r as n,c as s,a,b as t,w as e,F as o,e as c,d as p,o as l}from"./app.5d4d0345.js";import{_ as u}from"./plugin-vue_export-helper.5a098b48.js";const i={},r=a("h1",{id:"全局资源",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#全局资源","aria-hidden":"true"},"#"),c(" 全局资源")],-1),d=a("h2",{id:"svg-图标",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#svg-图标","aria-hidden":"true"},"#"),c(" SVG 图标")],-1),k=c("越来越多项目开始使用 SVG 图标做为精灵图的替代品，本框架也提供了 SVG 图标支持，推荐去"),g={href:"https://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"},h=c("阿里巴巴矢量图标库"),m=c("下载高质量 SVG 图标。"),x=p('<p>使用 SVG 图标也很简单，首先将 svg 文件放到 <code>./src/assets/icons/</code> 目录下，然后在页面中就可以通过 <code>&lt;svg-icon /&gt;</code> 组件使用了，name 就是 svg 文件名，如下：</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token comment">&lt;!-- &lt;svg-icon /&gt; 组件无需手动注册即可使用 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><h2 id="图片" tabindex="-1"><a class="header-anchor" href="#图片" aria-hidden="true">#</a> 图片</h2><p>框架用到的图片资源都放在 <code>./src/assets/images/</code> 目录下，可自行新建文件夹分类管理。</p><h2 id="精灵图" tabindex="-1"><a class="header-anchor" href="#精灵图" aria-hidden="true">#</a> 精灵图</h2><p>精灵图又称雪碧图，原理是将多张小图合并到一张大图上，以便减少 HTTP 请求，提高网站访问速度。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>在 HTTP/1.1 下，因<strong>队头阻塞</strong>的问题，如果在一个页面里需要展示多张小图，建议使用精灵图</p><p>但 HTTP/2 的<strong>多路复用</strong>特性，已经不太需要精灵图合并了，我们更建议使用 SVG 图标代替精灵图</p></div><p>精灵图原始图片的存放位置位于 <code>./src/assets/sprites/</code> 目录下，注意按文件夹区分。</p><p>项目运行前会根据文件夹生成对应的精灵图文件（精灵图图片和 <code>.scss</code> 资源文件），多个文件夹则会生成多个精灵图文件。需要注意的是，在项目运行时，修改文件夹里的图片，会重新生成相关精灵图文件，但如果新建文件夹，则需要重新运行项目才会生成对应精灵图文件。</p><p>可通过 <code>@include</code> 直接使用精灵图，无需手动引入 <code>.scss</code> 文件，使用方法如下：</p>',10),b=a("div",{class:"language-scss ext-scss"},[a("pre",{class:"language-scss"},[a("code",null,[a("span",{class:"token comment"},"// @include [文件夹名称]-sprite([文件名称]);"),c("\n"),a("span",{class:"token selector"},".icon "),a("span",{class:"token punctuation"},"{"),c("\n    "),a("span",{class:"token keyword"},"@include"),c(),a("span",{class:"token function"},"example-sprite"),a("span",{class:"token punctuation"},"("),c("address"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),c("\n"),a("span",{class:"token punctuation"},"}"),c("\n\n"),a("span",{class:"token comment"},"// 输出"),c("\n"),a("span",{class:"token selector"},".icon "),a("span",{class:"token punctuation"},"{"),c("\n    "),a("span",{class:"token property"},"background-image"),a("span",{class:"token punctuation"},":"),c(),a("span",{class:"token url"},"url"),a("span",{class:"token punctuation"},"("),c("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-position"),a("span",{class:"token punctuation"},":"),c(" 0px 0px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-size"),a("span",{class:"token punctuation"},":"),c(" 210px 210px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"width"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"height"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n"),a("span",{class:"token punctuation"},"}"),c("\n")])])],-1),f=a("div",{class:"language-scss ext-scss"},[a("pre",{class:"language-scss"},[a("code",null,[a("span",{class:"token comment"},"// @include all-[文件夹名称]-sprites;"),c("\n"),a("span",{class:"token keyword"},"@include"),c(" all-example-sprites"),a("span",{class:"token punctuation"},";"),c("\n\n"),a("span",{class:"token comment"},"// 输出"),c("\n"),a("span",{class:"token selector"},".example-address-sprites "),a("span",{class:"token punctuation"},"{"),c("\n    "),a("span",{class:"token property"},"background-image"),a("span",{class:"token punctuation"},":"),c(),a("span",{class:"token url"},"url"),a("span",{class:"token punctuation"},"("),c("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-position"),a("span",{class:"token punctuation"},":"),c(" 0 0"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-size"),a("span",{class:"token punctuation"},":"),c(" 210px 210px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"width"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"height"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n"),a("span",{class:"token punctuation"},"}"),c("\n"),a("span",{class:"token selector"},".example-feedback-sprites "),a("span",{class:"token punctuation"},"{"),c("\n    "),a("span",{class:"token property"},"background-image"),a("span",{class:"token punctuation"},":"),c(),a("span",{class:"token url"},"url"),a("span",{class:"token punctuation"},"("),c("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-position"),a("span",{class:"token punctuation"},":"),c(" -110px 0"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-size"),a("span",{class:"token punctuation"},":"),c(" 210px 210px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"width"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"height"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n"),a("span",{class:"token punctuation"},"}"),c("\n"),a("span",{class:"token selector"},".example-payment-sprites "),a("span",{class:"token punctuation"},"{"),c("\n    "),a("span",{class:"token property"},"background-image"),a("span",{class:"token punctuation"},":"),c(),a("span",{class:"token url"},"url"),a("span",{class:"token punctuation"},"("),c("img/example.326b35aec20837b9c08563c654422fe6.326b35ae.png"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-position"),a("span",{class:"token punctuation"},":"),c(" 0 -110px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"background-size"),a("span",{class:"token punctuation"},":"),c(" 210px 210px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"width"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n    "),a("span",{class:"token property"},"height"),a("span",{class:"token punctuation"},":"),c(" 100px"),a("span",{class:"token punctuation"},";"),c("\n"),a("span",{class:"token punctuation"},"}"),c("\n")])])],-1),v=p('<p>如果是小型项目，静态图片不多，可全部放在一个文件夹内；如果是中大型项目，文件夹可按模块来划分，这样不同的模块最终会生成各自的精灵图文件。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>文件命名仅支持字母与数字，所有特殊符号均会被转化为 <code>-</code> ，如：</p><ul><li><code>test_123</code> =&gt; <code>test-123</code></li><li><code>test@2x</code> =&gt; <code>test-2x</code></li><li><code>test - 123</code> =&gt; <code>test-123</code></li><li><code>test$%123</code> =&gt; <code>test-123</code></li></ul><p>使用过程中如果发现无法正常展示图片，可检查生成的 <code>.scss</code> 文件，确定在代码中使用的文件名。</p></div><h2 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h2><p>样式存放目录为 <code>./src/assets/styles/</code> ，因为 Vue 的文件特性，页面样式建议写在 <code>.vue</code> 文件里，所以该目录只存放全局样式，方便统一管理。</p><p>此目录下还有一个特殊目录，即 <code>./src/assets/styles/resources/</code> ，这是全局 SCSS 资源目录，首先这个目录里只支持 <code>.scss</code> 文件，其次在这个目录里的文件，无需在页面上引用即可生效并使用。</p><p>同样，精灵图目录下生成的 SCSS 资源也是全局可调用的。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>全局 SCSS 资源并不是全局样式，是变量、@mixin 、@function 这些东西</p></div><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><h3 id="全局组件" tabindex="-1"><a class="header-anchor" href="#全局组件" aria-hidden="true">#</a> 全局组件</h3>',9),y={class:"custom-container tip"},S=a("p",{class:"custom-container-title"},"并非全局引用",-1),w=c("与 Vue2 版本不同，这里所谓的“全局组件”并不会注册到全局，而是在使用的时候自动引入，该特性由 "),_={href:"https://github.com/antfu/unplugin-vue-components",target:"_blank",rel:"noopener noreferrer"},G=c("unplugin-vue-components"),V=c(" 提供支持。"),T=a("p",null,[c("全局组件存放在 "),a("code",null,"./src/components/"),c(" 目录下，需要注意各个组件按文件夹进行区分。")],-1),C=a("p",null,[c("每个组件的文件夹内至少保留一个文件名为 "),a("code",null,"index.vue"),c(" 的组件入口（可参考 "),a("code",null,"SvgIcon"),c(" 组件），文件夹名称即为组件名。")],-1),z=c("推荐使用 "),q=a("code",null,"pnpm new",-1),H=c(" 指令进行组件生成，详细可查看《"),P=c("代码文件自动生成"),j=c("》。"),I=a("h3",{id:"局部组件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#局部组件","aria-hidden":"true"},"#"),c(" 局部组件")],-1),L=a("p",null,[c("局部组件没有提供专门的存放目录，我们建议采用就近原则，即局部组件与使用页面离得越近越好。你可以在每个模块的文件夹下，建立一个 "),a("code",null,"components"),c(" 文件夹用于存放局部组件。")],-1);var F=u(i,[["render",function(c,p){const u=n("OutboundLink"),i=n("CodeGroupItem"),F=n("CodeGroup"),O=n("RouterLink");return l(),s(o,null,[r,d,a("p",null,[k,a("a",g,[h,t(u)]),m]),x,t(F,null,{default:e((()=>[t(i,{title:"方法 1"},{default:e((()=>[b])),_:1}),t(i,{title:"方法 2"},{default:e((()=>[f])),_:1})])),_:1}),v,a("div",y,[S,a("p",null,[w,a("a",_,[G,t(u)]),V])]),T,C,a("p",null,[z,q,H,t(O,{to:"/guide/plop.html"},{default:e((()=>[P])),_:1}),j]),I,L],64)}]]);export{F as default};
