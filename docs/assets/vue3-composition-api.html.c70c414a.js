import{r as n,c as s,a,b as t,F as p,e as o,d as e,o as c}from"./app.e65cb87c.js";import{_ as l}from"./plugin-vue_export-helper.5a098b48.js";const u={},r=a("h1",{id:"使用-composition-api-开发",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#使用-composition-api-开发","aria-hidden":"true"},"#"),o(" 使用 Composition API 开发")],-1),i=a("div",{class:"custom-container tip"},[a("p",{class:"custom-container-title"},"关于 Options API"),a("p",null,"Vue3 虽然提供了全新的 Composition API ，但它依旧支持 Options API ，对于从 Vue2 就在使用的开发者，如果一时半会没办法立马上手 Composition API ，你依旧可以在项目中使用 Options API 做开发。")],-1),k=o("如果你已经熟悉 Composition API ，那么我们建议你在开发的时候，使用 "),m={href:"https://v3.cn.vuejs.org/api/sfc-script-setup.html",target:"_blank",rel:"noopener noreferrer"},g=a("code",null,"<script setup>",-1),d=o(" 语法糖进行开发。"),f=o("同时得益于 "),h={href:"https://github.com/antfu/unplugin-auto-import",target:"_blank",rel:"noopener noreferrer"},v=o("unplugin-auto-import"),b=o(" 的特性，在 "),A=a("code",null,"<script setup>",-1),I=o(" 里使用 Composition API 无需导入相关 API ，该依赖会自动导入（默认支持 vue 、vuex 和 vue-router）。"),P=e('<div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 原先需要手动 import 相关 API</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> doubled <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 现在直接使用即可</span>\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> doubled <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',2);var w=l(u,[["render",function(o,e){const l=n("OutboundLink");return c(),s(p,null,[r,i,a("p",null,[k,a("a",m,[g,t(l)]),d]),a("p",null,[f,a("a",h,[v,t(l)]),b,A,I]),P],64)}]]);export{w as default};
