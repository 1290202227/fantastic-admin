import{r as n,o as s,c as a,a as e,b as p,F as r,e as t,d as l}from"./app.354e66be.js";const c={},o=t('<h1 id="布局" tabindex="-1"><a class="header-anchor" href="#布局" aria-hidden="true">#</a> 布局</h1><p>通过两处设置可实现 3 套不同的页面布局，分别是<strong>双侧边栏布局</strong>、<strong>单侧边栏布局</strong>、<strong>头部导航布局</strong>。</p><h2 id="双侧边栏布局" tabindex="-1"><a class="header-anchor" href="#双侧边栏布局" aria-hidden="true">#</a> 双侧边栏布局</h2><p>项目默认显示<strong>双侧边栏布局</strong>，即区分主导航和次导航，展示效果如下：</p>',4),i=["src"],u=e("h2",{id:"头部导航布局",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#头部导航布局","aria-hidden":"true"},"#"),l(" 头部导航布局")],-1),b=e("p",null,[e("strong",null,"头部导航布局"),l("只需在 "),e("code",null,"/src/setting.js"),l(" 设置 "),e("code",null,"showHeader: true"),l(" 即可，展示效果如下：")],-1),d=["src"],m=t('<h2 id="单侧边栏布局" tabindex="-1"><a class="header-anchor" href="#单侧边栏布局" aria-hidden="true">#</a> 单侧边栏布局</h2><p>如果要调整为<strong>单侧边栏布局</strong>，则需要到 <code>/src/router/index.js</code> 路由配置文件里找到下面这段代码，并注释掉高亮部分代码。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 当 children 不为空的主导航只有一项时，则隐藏</span>\n<span class="token keyword">let</span> asyncRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;默认&#39;</span><span class="token punctuation">,</span>\n            icon<span class="token operator">:</span> <span class="token string">&#39;sidebar-default&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n            MultilevelMenuExample<span class="token punctuation">,</span>\n            BreadcrumbExample<span class="token punctuation">,</span>\n            KeepAliveExample<span class="token punctuation">,</span>\n            ComponentExample<span class="token punctuation">,</span>\n            PermissionExample\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;其它&#39;</span><span class="token punctuation">,</span>\n            icon<span class="token operator">:</span> <span class="token string">&#39;sidebar-other&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token comment">// ExTernalLinkExample</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>展示效果如下：</p>',4),g=["src"],h=t('<p><strong>单侧边栏布局</strong>其实就是去掉了主导航，当只有一个主导航，或者其它主导航下面都没有次导航的时候，布局就自动切换为<strong>单侧边栏布局</strong>。这种布局适合在功能模块不多的中小型后台系统使用。</p><div class="custom-container tip"><p class="custom-container-title">注意</p><p>同时设置<strong>单侧边栏布局</strong>和<strong>头部导航布局</strong>，在头部区域也不会展示主导航内容。</p></div><h2 id="移动端" tabindex="-1"><a class="header-anchor" href="#移动端" aria-hidden="true">#</a> 移动端</h2><p>本框架兼容移动端，但由于后台系统在开发时可能会引用各类第三方插件，这部分的兼容性需要开发者自行适配。</p><p>当页面宽度小于 <code>992px</code> 时会切换为移动端布局显示，移动端下不支持设置框架布局，以及部分不支持移动端的操作按钮也会进行隐藏，例如“全屏”按钮。</p><div class="custom-container tip"><p class="custom-container-title">建议</p><p>由于后台系统属于生产效率工具，而移动端天生不适合复杂的操作，尤其是遇到一些比较复杂的表单，在移动端上操作是极其“恼火”的。</p><p>依据作者的开发经验，建议移动端后台可以独立开发一套，在功能上进行删减，保留轻量级的管理操作。</p></div>',6),k={id:"扩展",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#扩展","aria-hidden":"true"},"#",-1),x=l(" 扩展 "),f=t('<p>在基础版 3 套页面布局的基础上，专业版扩展了另一维度的 4 套布局，分别是<strong>自适应</strong>、<strong>自适应（有最小宽度）</strong>、<strong>定宽居中</strong>、<strong>定宽居中（有最大宽度）</strong>，可在配置文件中轻松设置。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 布局类型，当设置为非 adaption 时，请去 ./src/assets/styles/resources/layout.scss 里设置 $g-app-width\n * adaption 自适应\n * adaption-min-width 自适应（有最小宽度）\n * center 定宽居中\n * center-max-width 定宽居中（有最大宽度）\n */</span>\nlayout<span class="token operator">:</span> <span class="token string">&#39;adaption&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>下面简单演示这 4 套布局的特点（图片平均大小为 2M ，加载可能需要点时间）。</p><p><strong>自适应</strong></p>',4),w=["src"],y=e("p",null,[e("strong",null,"自适应（有最小宽度）")],-1),j=["src"],B=e("p",null,[e("strong",null,"定宽居中")],-1),$=["src"],E=e("p",null,[e("strong",null,"定宽居中（有最大宽度）")],-1),_=["src"],M=e("p",null,[l("将扩展的 4 套布局和基础版原有的 3 套布局进行组合搭配，可实现 12 套布局，如果再搭配默认提供的 5 款主题，"),e("strong",null,"即可实现 60 种界面风格"),l("。")],-1);c.render=function(t,l){const c=n("Badge");return s(),a(r,null,[o,e("p",null,[e("img",{src:t.$withBase("/vue2/basic-layout-default.png")},null,8,i)]),u,b,e("p",null,[e("img",{src:t.$withBase("/vue2/basic-layout-header.png")},null,8,d)]),m,e("p",null,[e("img",{src:t.$withBase("/vue2/basic-layout-without-main-sidebar.png")},null,8,g)]),h,e("h2",k,[v,x,p(c,{type:"tip",text:"专业版",vertical:"top"})]),f,e("p",null,[e("img",{src:t.$withBase("/layout_1.gif")},null,8,w)]),y,e("p",null,[e("img",{src:t.$withBase("/layout_2.gif")},null,8,j)]),B,e("p",null,[e("img",{src:t.$withBase("/layout_3.gif")},null,8,$)]),E,e("p",null,[e("img",{src:t.$withBase("/layout_4.gif")},null,8,_)]),M],64)};export{c as default};
