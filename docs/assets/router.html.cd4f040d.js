import{r as n,o as a,c as s,a as t,b as e,w as p,F as o,e as c,d as l}from"./app.a079641d.js";const r={},i=c('<h1 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h1><p>项目路由配置存放在 <code>./scr/router/modules/</code> 目录下，每一个 js 文件会被视为一个路由模块。</p><p>所有配置的路由模块均需要在 <code>/src/router/index.js</code> 文件里进行引入并放到主导航下。</p><h2 id="基本配置" tabindex="-1"><a class="header-anchor" href="#基本配置" aria-hidden="true">#</a> 基本配置</h2><h3 id="二级路由" tabindex="-1"><a class="header-anchor" href="#二级路由" aria-hidden="true">#</a> 二级路由</h3><p>一个路由模块包含以下结构：</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Layout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/layout/index.vue&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/example&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/example/index&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Example&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;演示&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;ExampleIndex&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/example/index.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;演示页面&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="custom-container warning"><p class="custom-container-title">注意事项</p><ul><li>整个项目所有路由的 <code>name</code> 不能重复</li><li>一级路由的 <code>component</code> 需设置为 Layout ，并且 path 前面需要加 <code>/</code>，其余子路由都不要以 <code>/</code> 开头</li></ul></div><h3 id="多级路由" tabindex="-1"><a class="header-anchor" href="#多级路由" aria-hidden="true">#</a> 多级路由</h3>',9),u={class:"custom-container tip"},d=t("p",{class:"custom-container-title"},"说明",-1),k=l("在 Vue2 版本中，在框架配置中设置 "),b=t("code",null,"enableFlatRoutes: true",-1),h=l(" ，会将多级路由转成二级路由。而在 Vue3 版本中，所有的多级路由最终都会转成二级路由并注册，但多级嵌套的层级结构会在侧边栏导航和面包屑到中保留，其设计原因可阅读《"),g=l("页面缓存"),m=l("》。"),x=c('<p>多级路由的中间层级，可以无需设置 <code>component</code> 。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Layout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/layout/index.vue&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/example&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/example/level/index&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Example&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;演示&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;level&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;ExampleLevel&#39;</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;中间层级&#39;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    path<span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;ExampleIndex&#39;</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/example/index.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        title<span class="token operator">:</span> <span class="token string">&#39;演示页面&#39;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="外链" tabindex="-1"><a class="header-anchor" href="#外链" aria-hidden="true">#</a> 外链</h3><p>只需要将 <code>path</code> 设置为需要跳转的 HTTP 地址即可。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;https://hooray.gitee.io/fantastic-admin/&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;官网&#39;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="主导航" tabindex="-1"><a class="header-anchor" href="#主导航" aria-hidden="true">#</a> 主导航</h3><p>主导航并非路由的一部分，它只是将我们配置好的路由模块进行归类，在 <code>/src/router/index.js</code> 里进行设置。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> asyncRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;演示&#39;</span><span class="token punctuation">,</span>\n            icon<span class="token operator">:</span> <span class="token string">&#39;sidebar-default&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n            MultilevelMenuExample<span class="token punctuation">,</span>\n            BreadcrumbExample<span class="token punctuation">,</span>\n            KeepAliveExample\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;其它&#39;</span><span class="token punctuation">,</span>\n            icon<span class="token operator">:</span> <span class="token string">&#39;sidebar-other&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n            ComponentExample<span class="token punctuation">,</span>\n            PermissionExample\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>主导航只需设置 <code>meta</code> 和 <code>children</code> 两个参数，其中 <code>meta</code> 只接受 <code>title</code> 和 <code>icon</code> 这两个参数，<code>children</code> 则是存放我们配置的路由模块数据。</p><h2 id="导航配置" tabindex="-1"><a class="header-anchor" href="#导航配置" aria-hidden="true">#</a> 导航配置</h2><p>框架的核心是通过路由的配置生成对应的导航，所以除了路由的基本配置外，框架还提供了针对导航的自定义配置，这些配置都存放在 <code>meta</code> 对象里。</p><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✔️</td><td style="text-align:left;">导航和面包屑导航中展示的标题</td></tr></tbody></table><h3 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">导航中显示的图标，图标使用 <code>&lt;svg-icon /&gt;</code> 组件展示</td></tr></tbody></table><p>专业版支持使用 ElementPlus Icon 和 RemixIcon 图标：</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>icon<span class="token operator">:</span> <span class="token string">&#39;el-icon-star-on&#39;</span>\nicon<span class="token operator">:</span> <span class="token string">&#39;ri-star-fill&#39;</span>\n</code></pre></div>',17),y={id:"activeicon",tabindex:"-1"},v=t("a",{class:"header-anchor",href:"#activeicon","aria-hidden":"true"},"#",-1),f=l(" activeIcon "),j=c('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">导航激活时显示的图标，图标使用 <code>&lt;svg-icon /&gt;</code> 组件展示</td></tr></tbody></table><p>支持使用 ElementPlus Icon 和 RemixIcon 图标：</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>activeIcon<span class="token operator">:</span> <span class="token string">&#39;el-icon-star-on&#39;</span>\nactiveIcon<span class="token operator">:</span> <span class="token string">&#39;ri-star-fill&#39;</span>\n</code></pre></div><h3 id="defaultopened" tabindex="-1"><a class="header-anchor" href="#defaultopened" aria-hidden="true">#</a> defaultOpened</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean</td><td style="text-align:center;">✖️</td><td style="text-align:left;">子导航是否默认展开</td></tr></tbody></table><p>使用该特性时，建议在框架配置里关闭 <code>sidebarUniqueOpened</code> 设置。</p><h3 id="auth" tabindex="-1"><a class="header-anchor" href="#auth" aria-hidden="true">#</a> auth</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string / array</td><td style="text-align:center;">✖️</td><td style="text-align:left;">该路由访问权限，支持多个权限叠加，只要满足一个，即可进入</td></tr></tbody></table>',8),w=l("用户在登录时，会获取用户权限，根据权限去过滤并动态注册路由。所以没有权限的路由不会被注册，也不会在侧边栏导航里显示，详细可阅读《"),B=l("权限 - 路由权限"),E=l("》。"),L=c('<h3 id="sidebar" tabindex="-1"><a class="header-anchor" href="#sidebar" aria-hidden="true">#</a> sidebar</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean</td><td style="text-align:center;">✖️</td><td style="text-align:center;">true</td><td style="text-align:left;">该路由是否在侧边栏导航中展示</td></tr></tbody></table><h3 id="breadcrumb" tabindex="-1"><a class="header-anchor" href="#breadcrumb" aria-hidden="true">#</a> breadcrumb</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean</td><td style="text-align:center;">✖️</td><td style="text-align:center;">true</td><td style="text-align:left;">该路由是否在面包屑导航中展示</td></tr></tbody></table><h3 id="activemenu" tabindex="-1"><a class="header-anchor" href="#activemenu" aria-hidden="true">#</a> activeMenu</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">指定高亮侧边栏路由，需要设置完整路由地址</td></tr></tbody></table><p>该参数常与 <code>sidebar: false</code> 一起使用，因为路由不在侧边栏导航显示，会导致进入该路由后，侧边栏导航高亮效果失效，所以需要手动指定。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/news&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;新闻管理&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;新闻列表&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;新闻详情&#39;</span><span class="token punctuation">,</span>\n                sidebar<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                activeMenu<span class="token operator">:</span> <span class="token string">&#39;/news/list&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br></div></div><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache" aria-hidden="true">#</a> cache</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean / string / array</td><td style="text-align:center;">✖️</td><td style="text-align:left;">是否对该页面进行缓存</td></tr></tbody></table><ul><li><code>boolean</code> 设置为 true 时，该路由页面会被一直缓存</li><li><code>string</code> 设置某个目标路由的 name ，表示当前路由页面跳转到设置的 name 对应的路由页面时，则将当前路由页面进行缓存，否则不缓存</li><li><code>array</code> 同 <code>string</code> ，可设置一个目标路由的 name 数组</li></ul>',11),R=l("例如从列表页进入详情页，则需要将列表页进行缓存，这样当返回列表页的时候，列表页的数据状态会被保留；而从列表页进入其它页面，则无需将列表页进行缓存。详细介绍请移步"),I=l("页面缓存"),A={id:"nocache",tabindex:"-1"},M=t("a",{class:"header-anchor",href:"#nocache","aria-hidden":"true"},"#",-1),C=l(" noCache "),F=c('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string / array</td><td style="text-align:center;">✖️</td><td style="text-align:left;">是否对该页面清除缓存，须设置 cache 才会生效</td></tr></tbody></table><ul><li><code>string</code> 设置某个目标路由的 name ，表示当前路由页面跳转到设置的 name 对应的路由页面时，则将当前路由页面清除缓存，否则不清除缓存</li><li><code>array</code> 同 <code>string</code> ，可设置一个目标路由的 name 数组</li></ul>',2),P=l("该属性通常在启用标签栏时会使用到。详细介绍请阅读《"),$=l("页面缓存 - 标签栏开启"),_=l("》。"),V={id:"badge",tabindex:"-1"},D=t("a",{class:"header-anchor",href:"#badge","aria-hidden":"true"},"#",-1),O=l(" badge "),T=c('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean / number / string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">导航标记</td></tr></tbody></table><p>设置不同的类型值，展示效果也会不同。</p><ul><li><code>boolean</code> 展示形式为点，当值为 false 时隐藏</li><li><code>number</code> 展示形式为文本，当值小于等于 0 时隐藏</li><li><code>string</code> 展示形式为文本，当值为空时隐藏</li></ul><p>如果标记需要动态更新，请设置为箭头函数形式，并返回外部变量，例如搭配 vuex 一起使用。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function-variable function">badge</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>global<span class="token punctuation">.</span>number\n</code></pre></div>',5),W={id:"link",tabindex:"-1"},q=t("a",{class:"header-anchor",href:"#link","aria-hidden":"true"},"#",-1),G=l(" link "),H=c('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">内嵌网页链接</td></tr></tbody></table><p>如果要开启内嵌网页，component 需要设置为框架提供的 layoue/iframe.vue</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;iframe&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/layout/iframe.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;Gitee 仓库&#39;</span><span class="token punctuation">,</span>\n        link<span class="token operator">:</span> <span class="token string">&#39;https://gitee.com/hooray/fantastic-admin&#39;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',3),K={id:"copyright",tabindex:"-1"},U=t("a",{class:"header-anchor",href:"#copyright","aria-hidden":"true"},"#",-1),z=l(" copyright "),J=c('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean</td><td style="text-align:center;">✖️</td><td style="text-align:center;">/</td><td style="text-align:left;">该路由是否显示底部版权信息</td></tr></tbody></table><p>该参数比框架配置里的 <code>showCopyright</code> 优先级高，不设置则继承框架配置里的设置。</p>',2),N={id:"paddingbottom",tabindex:"-1"},Q=t("a",{class:"header-anchor",href:"#paddingbottom","aria-hidden":"true"},"#",-1),S=l(" paddingBottom "),X=c('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">该路由是否需要空出距离底部距离</td></tr></tbody></table><p>当使用类似 <code>&lt;FixedActionBar /&gt;</code> 这类通过 <code>position: fixed</code> 固定在底部的组件时，需要手动设置该参数，目的是为了防止页面底部可能被遮挡。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>paddingBottom<span class="token operator">:</span> <span class="token string">&#39;80px&#39;</span>\n</code></pre></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Layout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/layout/index.vue&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/banner&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/banner/list&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;banner&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;Banner 管理&#39;</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;banner&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;bannerCreate&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/banner/detail.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;新增 Banner&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;bannerList&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/banner/list.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;Banner 列表&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;detail/:id&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;bannerEdit&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/banner/detail.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;编辑 Banner&#39;</span><span class="token punctuation">,</span>\n                sidebar<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                activeMenu<span class="token operator">:</span> <span class="token string">&#39;/banner/list&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>展示效果如下：</p>',6),Y=["src"],Z=t("h2",{id:"小技巧",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#小技巧","aria-hidden":"true"},"#"),l(" 小技巧")],-1),nn=t("p",null,"如果需要在不改变侧边栏导航结构的前提下，面包屑导航希望能变成这样：",-1),an=["src"],sn=c('<p>其实根据图中的效果，可以确定路由需要有三层，剩下就是通过配置项去控制侧边栏导航和面包屑导航是否展示。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Layout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/layout/index.vue&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/banner&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    redirect<span class="token operator">:</span> <span class="token string">&#39;/banner/list&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;banner&#39;</span><span class="token punctuation">,</span>\n    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;Banner 管理&#39;</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;banner&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">,</span>\n            redirect<span class="token operator">:</span> <span class="token string">&#39;/banner/list/detail&#39;</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;新增 Banner&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>\n            meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;Banner 列表&#39;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            children<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    path<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;bannerList&#39;</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/banner/list.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        title<span class="token operator">:</span> <span class="token string">&#39;Banner 列表&#39;</span><span class="token punctuation">,</span>\n                        sidebar<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                        breadcrumb<span class="token operator">:</span> <span class="token boolean">false</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    path<span class="token operator">:</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">,</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;bannerCreate&#39;</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/banner/detail.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        title<span class="token operator">:</span> <span class="token string">&#39;新增 Banner&#39;</span><span class="token punctuation">,</span>\n                        sidebar<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                        activeMenu<span class="token operator">:</span> <span class="token string">&#39;/banner/detail&#39;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    path<span class="token operator">:</span> <span class="token string">&#39;detail/:id&#39;</span><span class="token punctuation">,</span>\n                    name<span class="token operator">:</span> <span class="token string">&#39;bannerEdit&#39;</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/banner/detail.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        title<span class="token operator">:</span> <span class="token string">&#39;编辑 Banner&#39;</span><span class="token punctuation">,</span>\n                        sidebar<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                        activeMenu<span class="token operator">:</span> <span class="token string">&#39;/banner/list&#39;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h2 id="后端生成" tabindex="-1"><a class="header-anchor" href="#后端生成" aria-hidden="true">#</a> 后端生成</h2><div class="custom-container danger"><p class="custom-container-title">强烈不建议使用该特性！</p><p>导航后端配置并生成这个需求，基本上是后端开发者刚接触前端后台项目开发时最常问的一个问题，但当真正做过前端开发并了解 Vue 的开发模式后，会意识到这个需求是多此一举的，并且会导致框架提供的部分导航特性无法使用，是得不偿失的做法。</p><p>其根本原因在于，导航是通过路由生成的，而路由是与页面组件直接挂钩，即一个路由则对应着一个 <code>.vue</code> 的页面组件文件。即便将路由数据通过后端配置，也要确保路由对应的页面组件在项目中存在，这就导致在开发环境下，通过后端配置好路由数据后，还需要在项目中新增对应的 <code>.vue</code> 文件写业务代码，<strong>并不是后端新增一个路由，前端就能直接访问到该路由页面</strong>，这也就意味着在生产环境中不能随意修改路由数据，可能会导致导航无法访问，因为很多路由设置和业务逻辑是高度耦合的，例如页面跳转用到的 <code>name</code> 和 <code>path</code> 不能随意修改，<code>component</code> 不能设置不存在的页面组件。能交给后端动态配置的最多也就只有 <code>title</code> 和 <code>icon</code> 这两个属性，所以仅仅为了这个需求，而让开发流程复杂化，是得不偿失的一种做法。</p><p>如果你执意使用该特性，请确保你了解该特性在上面所说的优缺点，并谨慎使用！</p></div><p>在框架配置里开启：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>enableBackendReturnRoute<span class="token operator">:</span> <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>开启后访问 <code>/src/store/modules/menu.js</code> 文件，找到 <code>generateRoutesAtBack()</code> 这个 action 方法，你要做的就是修改这个方法里的请求地址，请求返回的数据就是路由数据，你可以在 <code>/src/mock/route.js</code> 里查看 mock 数据。</p><p>开启后端生成后，路由权限有两种做法，一种是后端直接返回用户具备访问权限的路由数据，另一种则返回全部的路由的数据，让框架自行处理。两种做法的区别在于第一种返回的路由数据里，无需在 meta 对象里设置 auth 参数。</p>',8),tn={id:"免登录页面",tabindex:"-1"},en=t("a",{class:"header-anchor",href:"#免登录页面","aria-hidden":"true"},"#",-1),pn=l(" 免登录页面 "),on=c('<p>基于后台框架的页面都是需要登录后才能访问，如果希望增加免登录的页面，也就是脱离框架本身，相对独立的页面，你可以按照下面的方式处理。</p><p>首先在 <code>/src/router/index.js</code> 里 <code>constantRoutes</code> 配置免登录页面的路由，然后在 <code>noLoginWhitelist</code> 里增加一句路由完整地址。例如下面的例子，就增加了一个 <code>/no/login/example</code> 的免登录页面地址。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// 固定路由</span>\n<span class="token keyword">const</span> constantRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n\t<span class="token operator">...</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/no/login/example&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;noLoginExample&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/no-login-example.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;免登录页面&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token comment">// 免登录白名单</span>\n<span class="token keyword">const</span> noLoginWhitelist <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">,</span>\n\t<span class="token string">&#39;/no/login/example&#39;</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br></div></div><h2 id="导航守卫" tabindex="-1"><a class="header-anchor" href="#导航守卫" aria-hidden="true">#</a> 导航守卫</h2><p>导航守卫是框架实现路由相关业务逻辑的核心，在守卫里会处理导航路由生成、页面标题设置、页面缓存设置、无效路由跳转404页面等处理。</p><p>所以理解框架的导航守卫处理逻辑，对业务开发或框架二次开发有很大帮助。</p><h3 id="全局前置守卫" tabindex="-1"><a class="header-anchor" href="#全局前置守卫" aria-hidden="true">#</a> 全局前置守卫</h3>',7),cn=["src"],ln=t("h3",{id:"全局后置钩子",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#全局后置钩子","aria-hidden":"true"},"#"),l(" 全局后置钩子")],-1),rn=["src"];r.render=function(c,l){const r=n("RouterLink"),un=n("Badge");return a(),s(o,null,[i,t("div",u,[d,t("p",null,[k,b,h,e(r,{to:"/guide/keep-alive.html"},{default:p((()=>[g])),_:1}),m])]),x,t("h3",y,[v,f,e(un,{type:"tip",text:"专业版",vertical:"top"})]),j,t("p",null,[w,e(r,{to:"/guide/permission.html#%E8%B7%AF%E7%94%B1%E6%9D%83%E9%99%90"},{default:p((()=>[B])),_:1}),E]),L,t("p",null,[R,e(r,{to:"/guide/keep-alive.html"},{default:p((()=>[I])),_:1})]),t("h3",A,[M,C,e(un,{type:"tip",text:"专业版",vertical:"top"})]),F,t("p",null,[P,e(r,{to:"/guide/keep-alive.html#%E6%A0%87%E7%AD%BE%E6%A0%8F%E5%BC%80%E5%90%AF"},{default:p((()=>[$])),_:1}),_]),t("h3",V,[D,O,e(un,{type:"tip",text:"专业版",vertical:"top"})]),T,t("h3",W,[q,G,e(un,{type:"tip",text:"专业版",vertical:"top"})]),H,t("h3",K,[U,z,e(un,{type:"tip",text:"专业版",vertical:"top"})]),J,t("h3",N,[Q,S,e(un,{type:"tip",text:"专业版",vertical:"top"})]),X,t("p",null,[t("img",{src:c.$withBase("/breadcrumb1.gif")},null,8,Y)]),Z,nn,t("p",null,[t("img",{src:c.$withBase("/breadcrumb2.gif")},null,8,an)]),sn,t("h2",tn,[en,pn,e(un,{type:"tip",text:"专业版",vertical:"top"})]),on,t("p",null,[t("img",{src:c.$withBase("/router1.png")},null,8,cn)]),ln,t("p",null,[t("img",{src:c.$withBase("/router2.png")},null,8,rn)])],64)};export{r as default};
