import{r as e,o as c,c as u,b as a,w as t,F as l,e as i,a as n,d as s}from"./app.1bcee62d.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const r={},d=i(`<h1 id="vuex" tabindex="-1"><a class="header-anchor" href="#vuex" aria-hidden="true">#</a> Vuex</h1><p>Vuex \u540C\u6837\u5B9E\u73B0\u4E86\u81EA\u52A8\u6CE8\u518C\uFF0C\u5F00\u53D1\u53EA\u9700\u5173\u6CE8 <code>/src/store/modules/</code> \u6587\u4EF6\u5939\u91CC\u7684\u6587\u4EF6\u5373\u53EF\uFF0C\u540C\u6837\u4E5F\u6309\u6A21\u5757\u533A\u5206\u6587\u4EF6\u3002\u6CE8\u610F\uFF0C\u9700\u8981\u5F00\u542F\u547D\u540D\u7A7A\u95F4\uFF0C\u6587\u4EF6\u540D\u5373\u6A21\u5757\u540D\u3002</p><p>\u4F8B\u5982\u65B0\u5EFA\u4E00\u4E2A <code>example.js</code> \u7684\u6587\u4EF6\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">state</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    namespaced<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    state<span class="token punctuation">,</span>
    actions<span class="token punctuation">,</span>
    getters<span class="token punctuation">,</span>
    mutations
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F7F\u7528\u65B9\u6CD5\uFF1A</p>`,5),x=n("div",{class:"language-javascript ext-js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" store "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"useStore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

store`),n("span",{class:"token punctuation"},"."),s("state"),n("span",{class:"token punctuation"},"."),s("example"),n("span",{class:"token punctuation"},"."),s("xxx"),n("span",{class:"token punctuation"},";"),s(`
store`),n("span",{class:"token punctuation"},"."),s("getters"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'example/xxx'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
store`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"dispatch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'example/xxx'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
store`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"commit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'example/xxx'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),m=n("div",{class:"language-javascript ext-js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("$store"),n("span",{class:"token punctuation"},"."),s("state"),n("span",{class:"token punctuation"},"."),s("example"),n("span",{class:"token punctuation"},"."),s("xxx"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("$store"),n("span",{class:"token punctuation"},"."),s("getters"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'example/xxx'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("$store"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"dispatch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'example/xxx'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("$store"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"commit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'example/xxx'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1);function g(_,f){const o=e("CodeGroupItem"),p=e("CodeGroup");return c(),u(l,null,[d,a(p,null,{default:t(()=>[a(o,{title:"Composition API"},{default:t(()=>[x]),_:1}),a(o,{title:"Options API"},{default:t(()=>[m]),_:1})]),_:1})],64)}var w=k(r,[["render",g]]);export{w as default};
