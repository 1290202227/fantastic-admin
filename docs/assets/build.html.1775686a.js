import{r as a,c as s,b as n,w as t,a as e,F as o,e as p,d as l,o as c}from"./app.57ad2a71.js";import{_ as r}from"./plugin-vue_export-helper.5a098b48.js";const i={},d=p('<h1 id="构建与预览" tabindex="-1"><a class="header-anchor" href="#构建与预览" aria-hidden="true">#</a> 构建与预览</h1><h2 id="构建" tabindex="-1"><a class="header-anchor" href="#构建" aria-hidden="true">#</a> 构建</h2><p>项目开发完成之后，可以执行 <code>pnpm build</code> 命令进行构建，构建打包成功之后，会在根目录生成 dist 文件夹，里面就是构建打包好的文件。</p><p>如果是需要构建测试环境，则执行 <code>pnpm build:test</code> 命令，对应会在根目录生成 dist-test 文件夹。</p><h2 id="预览" tabindex="-1"><a class="header-anchor" href="#预览" aria-hidden="true">#</a> 预览</h2><p>生成好的 dist 文件夹一般需要部署至服务器才算部署发布成功，但为了保证构建出来的文件能正常运行，开发者通常希望能在本地先预览一下，可执行 <code>pnpm serve</code> 或 <code>pnpm serve:test</code> 命令预览不同环境构建出的文件夹。</p><h2 id="压缩" tabindex="-1"><a class="header-anchor" href="#压缩" aria-hidden="true">#</a> 压缩</h2><p>在环境配置文件里设置 <code>VITE_BUILD_COMPRESS</code> 即可在构建时生成 <code>.gz</code> 或 <code>.br</code> 文件。</p>',8),u=e("div",{class:"language-dot ext-dot"},[e("pre",{class:"language-dot"},[e("code",null,[e("span",{class:"token node"},"VITE_BUILD_COMPRESS"),l(),e("span",{class:"token operator"},"="),l(),e("span",{class:"token attr-value"},"gzip"),l("\n")])])],-1),g=e("div",{class:"language-dot ext-dot"},[e("pre",{class:"language-dot"},[e("code",null,[e("span",{class:"token node"},"VITE_BUILD_COMPRESS"),l(),e("span",{class:"token operator"},"="),l(),e("span",{class:"token attr-value"},"brotli"),l("\n")])])],-1),k=e("div",{class:"language-dot ext-dot"},[e("pre",{class:"language-dot"},[e("code",null,[e("span",{class:"token node"},"VITE_BUILD_COMPRESS"),l(),e("span",{class:"token operator"},"="),l(),e("span",{class:"token attr-value"},"gzip"),e("span",{class:"token punctuation"},","),e("span",{class:"token node"},"brotli"),l("\n")])])],-1),h=p('<p>brotli 是比 gzip 压缩率更高的算法，可以与 gzip 共存不会冲突。</p><p>两者均需要 nginx 安装指定模块并开启后才会生效。</p><h2 id="其它设置" tabindex="-1"><a class="header-anchor" href="#其它设置" aria-hidden="true">#</a> 其它设置</h2><p>在环境配置文件里除了可以设置压缩选项，还可设置：</p><div class="language-dot ext-dot"><pre class="language-dot"><code><span class="token comment"># 是否在打包时生成 sourcemap</span>\n<span class="token attr-name">VITE_BUILD_SOURCEMAP</span> <span class="token operator">=</span> <span class="token attr-value">true</span>\n<span class="token comment"># 是否在打包时删除 console 代码</span>\n<span class="token attr-name">VITE_BUILD_DROP_CONSOLE</span> <span class="token operator">=</span> <span class="token attr-value">true</span>\n</code></pre></div>',5),m={id:"生成-pwa-应用",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#生成-pwa-应用","aria-hidden":"true"},"#",-1),b=l(" 生成 PWA 应用 "),_=p('<p>在环境配置文件里开启 PWA 支持。</p><div class="language-dot ext-dot"><pre class="language-dot"><code><span class="token comment"># 是否在打包时候生成PWA</span>\n<span class="token attr-name">VITE_BUILD_PWA</span> <span class="token operator">=</span> <span class="token attr-value">true</span>\n</code></pre></div><p>然后分别在 <code>/src/main.js</code> 和 <code>/src/App.vue</code> 里取消注释，引入 PWA 所需的相关文件。</p>',3),f=e("div",{class:"language-javascript ext-js"},[e("pre",{class:"language-javascript"},[e("code",null,[e("span",{class:"token comment"},"// PWA"),l("\n"),e("span",{class:"token keyword"},"import"),l(),e("span",{class:"token string"},"'./pwa'"),l("\n")])])],-1),x=e("div",{class:"language-vue ext-vue"},[e("pre",{class:"language-vue"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),l("template")]),e("span",{class:"token punctuation"},">")]),l("\n    "),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),l("el-config-provider")]),l(),e("span",{class:"token attr-name"},":locale"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),l("locales[$store.state.settings.defaultLang]"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),l("\n        "),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),l("RouterView")]),l(),e("span",{class:"token punctuation"},"/>")]),l("\n        "),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),l("ReloadPrompt")]),l(),e("span",{class:"token punctuation"},"/>")]),l("\n    "),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),l("el-config-provider")]),e("span",{class:"token punctuation"},">")]),l("\n"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),l("template")]),e("span",{class:"token punctuation"},">")]),l("\n\n"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),l("script")]),l(),e("span",{class:"token attr-name"},"setup"),e("span",{class:"token punctuation"},">")]),e("span",{class:"token script"},[e("span",{class:"token language-javascript"},[l("\n"),e("span",{class:"token keyword"},"import"),l(" ReloadPrompt "),e("span",{class:"token keyword"},"from"),l(),e("span",{class:"token string"},"'@/pwa/reloadPrompt.vue'"),l("\n")])]),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),l("script")]),e("span",{class:"token punctuation"},">")]),l("\n")])]),e("div",{class:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{class:"highlight-line"}," "),e("br"),e("br"),e("br"),e("br"),e("div",{class:"highlight-line"}," "),e("br")])],-1),w=e("p",null,[l("最后在 "),e("code",null,"./vite/plugins/pwa.js"),l(" 文件里修改 manifest 信息，对应的图片目录为 "),e("code",null,"./public/pwa_icons/"),l(" 。")],-1),I=e("p",null,"当准备好这一切并构建部署到生产环境后，你就可以在浏览器的地址栏里看到多了一个小图标，点击后会提示你可以安装应用。",-1),P=["src"],E=e("p",null,"并且以后再次构建部署，访问地址时，如果浏览器存在缓存，导致页面没有载入最新的资源，在页面右下角还会出现相关提示框。",-1),B=["src"];var S=r(i,[["render",function(p,l){const r=a("CodeGroupItem"),i=a("CodeGroup"),S=a("Badge");return c(),s(o,null,[d,n(i,null,{default:t((()=>[n(r,{title:"开启 gzip"},{default:t((()=>[u])),_:1}),n(r,{title:"开启 brotli"},{default:t((()=>[g])),_:1}),n(r,{title:"同时开启 gzip 和 brotli"},{default:t((()=>[k])),_:1})])),_:1}),h,e("h3",m,[v,b,n(S,{type:"tip",text:"专业版",vertical:"top"})]),_,n(i,null,{default:t((()=>[n(r,{title:"/src/main.js"},{default:t((()=>[f])),_:1}),n(r,{title:"/src/App.vue"},{default:t((()=>[x])),_:1})])),_:1}),w,I,e("p",null,[e("img",{src:p.$withBase("/pwa1.png")},null,8,P)]),E,e("p",null,[e("img",{src:p.$withBase("/pwa2.png")},null,8,B)])],64)}]]);export{S as default};
